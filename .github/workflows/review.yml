name: Comment Trigger
on:
  pull_request_review_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write

jobs:
  run-script:
    if: contains(github.event.comment.body, '@amp')
    runs-on: ubuntu-latest
    steps:          
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.sha }}
          
      - name: Restore thread cache
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: thread_cache.json
          key: thread-${{ github.event.pull_request.number }}
          
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        
      - name: Install the project
        run: uv sync --all-extras --dev
        
      - name: Get thread ID from hello.py
        id: thread
        run: |
          # Run hello.py and capture thread ID
          OUTPUT=$(uv run python hello.py)
          
          if echo "$OUTPUT" | grep -q "NEW:"; then
            THREAD_ID=$(echo "$OUTPUT" | grep "NEW:" | cut -d: -f2)
            echo "thread_id=$THREAD_ID" >> $GITHUB_OUTPUT
            echo "is_new=true" >> $GITHUB_OUTPUT
          else
            THREAD_ID=$(echo "$OUTPUT" | grep "EXISTING:" | cut -d: -f2)
            echo "thread_id=$THREAD_ID" >> $GITHUB_OUTPUT
            echo "is_new=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Respond to comment
        run: |
          if [ "${{ steps.thread.outputs.is_new }}" == "true" ]; then
            MESSAGE="Initialising Amp with thread id of ${{ steps.thread.outputs.thread_id }}"
          else
            MESSAGE="Resuming Amp with thread id of ${{ steps.thread.outputs.thread_id }}"
          fi
          
          # Post general PR comment (fallback if review comments don't work)
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
            -d "{
              \"body\": \"$MESSAGE\n\n[<view job run>](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})\"
            }"
            
      - name: Get triggering comment
        id: comment
        run: |
          # Save the triggering comment to file
          echo "=== Triggering Comment ===" > comments.txt
          echo "Comment by @${{ github.event.comment.user.login }}: ${{ github.event.comment.body }}" >> comments.txt
          echo "" >> comments.txt
          echo "File: ${{ github.event.comment.path }}" >> comments.txt
          echo "Line: ${{ github.event.comment.line }}" >> comments.txt
          
          echo "Triggering comment saved to comments.txt"
          cat comments.txt
          
      - name: Run test.py
        run: uv run python test.py
        
      - name: Save thread cache
        if: steps.thread.outputs.is_new == 'true'
        uses: actions/cache/save@v3
        with:
          path: thread_cache.json
          key: thread-${{ github.event.pull_request.number }}
