name: Amp Bot
on:
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

permissions:
  contents: write
  pull-requests: write

jobs:
  amp:
    if: contains(github.event.comment.body, '@amp')
    runs-on: ubuntu-latest
    env:
      PR_NUMBER: ${{ github.event.pull_request.number }}
      COMMENT_USER: ${{ github.event.comment.user.login }}
      COMMENT_BODY: ${{ github.event.comment.body }}
      AMP_API_KEY: ${{ secrets.AMP_API_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/cache/restore@v3
        id: cache
        with:
          path: thread_cache.json
          key: thread-${{ env.PR_NUMBER }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "22"

      - name: Install Sourcegraph Amp
        run: npm install -g @sourcegraph/amp
      - name: Extract user command
        run: |
          USER_COMMAND=$(echo "$COMMENT_BODY" | sed 's/^@amp\s*//')
          echo "USER_COMMAND=$USER_COMMAND" >> $GITHUB_ENV

      - name: Get or create thread ID
        run: |
          # First try to get thread ID from PR description
          PR_BODY=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER" | jq -r '.body')
          
          THREAD_ID_FROM_PR=$(echo "$PR_BODY" | grep -o 'thread-[a-z0-9-]*' | head -1)
          
          if [ ! -z "$THREAD_ID_FROM_PR" ]; then
            THREAD_ID="$THREAD_ID_FROM_PR"
            echo "THREAD_ID=$THREAD_ID" >> $GITHUB_ENV
            echo "Using thread ID from PR description: $THREAD_ID"
            echo "{\"thread_id\": \"$THREAD_ID\"}" > thread_cache.json
          elif [ -f thread_cache.json ]; then
            THREAD_ID=$(cat thread_cache.json | jq -r '.thread_id')
            echo "THREAD_ID=$THREAD_ID" >> $GITHUB_ENV
            echo "Using cached thread ID: $THREAD_ID"
          else
            echo "Creating new thread"
            THREAD_ID=$(amp threads new | grep -o 'thread-[a-z0-9-]*')
            echo "THREAD_ID=$THREAD_ID" >> $GITHUB_ENV
            echo "{\"thread_id\": \"$THREAD_ID\"}" > thread_cache.json
          fi

      - name: Run Amp with user command
        run: echo "$USER_COMMAND" | amp threads continue "$THREAD_ID"

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          git add .
          git commit -m "amp changes"
          git push

      - name: Respond to comment
        run: |
          RUN_LINK="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments" \
            -d "{\"body\": \"@$COMMENT_USER\n\n[Thread ID: $THREAD_ID](https://ampcode.com/threads/$THREAD_ID)\nRun Link: $RUN_LINK\n\n> $COMMENT_BODY\"}"

      - uses: actions/cache/save@v3
        with:
          path: thread_cache.json
          key: thread-${{ env.PR_NUMBER }}
